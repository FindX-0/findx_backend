# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AdminSignInInput {
  email: String!
  password: String!
}

input AdminSignUpInput {
  email: String!
  password: String!
  userName: String!
}

type AuthPayloadObject {
  accessToken: String!
  hasEmailVerified: Boolean
  refreshToken: String!
}

enum AuthProvider {
  APPLE
  EMAIL
  FACEBOOK
  GOOGLE
}

input CreateMathFieldInput {
  name: String!
}

input CreateMathProblemInput {
  difficulty: Int!
  imageMediaIds: [String!]!
  mathFieldId: ID!
  mathSubFieldId: ID!
  tex: String
  text: String
}

input CreateMathSubFieldInput {
  mathFieldId: ID!
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EmailSignInInput {
  email: String!
  password: String!
}

input EmailSignUpInput {
  email: String!
  password: String!
  userName: String!
}

input EnqueueTicketInput {
  mathFieldId: String!
}

input GoogleSignInInput {
  accessToken: String!
}

input IdentifierInput {
  id: ID!
}

type JwtTokenPayloadObject {
  accessToken: String!
  refreshToken: String!
}

input LastIdPageParamsObject {
  lastId: ID
  limit: Int!
}

type MathFieldObject {
  createdAt: DateTime!
  id: ID!
  name: String!
}

type MathFieldPageObject {
  count: Int!
  data: [MathFieldObject!]!
}

type MathProblemObject {
  createdAt: DateTime!
  difficulty: Int!
  id: ID!
  images: [MediaFileObject!]!
  mathFieldId: String!
  mathSubFieldId: String!
  tex: String
  text: String
}

type MathProblemPageObject {
  count: Int!
  data: [MathProblemObject!]!
}

type MathSubFieldObject {
  createdAt: DateTime!
  id: ID!
  mathFieldId: String!
  name: String!
}

type MathSubFieldPageObject {
  count: Int!
  data: [MathSubFieldObject!]!
}

type MediaFileObject {
  createdAt: DateTime!
  fileName: String!
  id: ID!
  mimetype: String!
  path: String!
}

type Mutation {
  adminRefreshToken(input: RefreshTokenInput!): JwtTokenPayloadObject!
  adminSignIn(input: AdminSignInInput!): JwtTokenPayloadObject!
  adminSignUp(input: AdminSignUpInput!): JwtTokenPayloadObject!
  createMathField(input: CreateMathFieldInput!): MathFieldObject!
  createMathProblem(input: CreateMathProblemInput!): MathProblemObject!
  createMathSubField(input: CreateMathSubFieldInput!): MathSubFieldObject!
  deleteMathField(input: IdentifierInput!): SuccessObject!
  deleteMathProblem(input: IdentifierInput!): SuccessObject!
  deleteMathSubField(input: IdentifierInput!): SuccessObject!
  emailSignIn(input: EmailSignInInput!): AuthPayloadObject!
  emailSignUp(input: EmailSignUpInput!): AuthPayloadObject!
  enqueueTicket(input: EnqueueTicketInput!): SuccessObject!
  googleSignIn(input: GoogleSignInInput!): AuthPayloadObject!
  refreshToken(input: RefreshTokenInput!): AuthPayloadObject!
  updateMathField(input: UpdateMathFieldInput!): MathFieldObject!
  updateMathProblem(input: UpdateMathProblemInput!): MathProblemObject!
  updateMathSubField(input: UpdateMathSubFieldInput!): MathSubFieldObject!
}

type Query {
  filterMathFields(input: LastIdPageParamsObject!): MathFieldPageObject!
  filterMathProblems(input: LastIdPageParamsObject!): MathProblemPageObject!
  filterMathSubFields(input: LastIdPageParamsObject!): MathSubFieldPageObject!
  getAuthUser: UserObject!
  getMathFieldById(input: IdentifierInput!): MathFieldObject!
  getMathProblemById(input: IdentifierInput!): MathProblemObject!
  getMathSubFieldById(input: IdentifierInput!): MathSubFieldObject!
  getServerTime: ServerTimeObject!
}

input RefreshTokenInput {
  refreshToken: String!
}

type ServerTimeObject {
  serverTime: Float!
}

type SuccessObject {
  success: Boolean!
}

input UpdateMathFieldInput {
  id: ID!
  name: String
}

input UpdateMathProblemInput {
  difficulty: Float
  id: ID!
  imageMediaIds: [String!]
  mathFieldId: ID
  mathSubFieldId: ID
  tex: String
  text: String
}

input UpdateMathSubFieldInput {
  id: ID!
  mathFieldId: ID
  name: String
}

type UserObject {
  authProvider: AuthProvider!
  createdAt: DateTime!
  email: String!
  id: ID!
  isCompleted: Boolean!
  userName: String
}